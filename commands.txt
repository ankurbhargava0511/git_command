
Ankur@ANKUR-DESKTOP MINGW64 /d/Development
$ git clone https://github.com/ankurbhargava0511/git_command.git
Cloning into 'git_command'...
warning: You appear to have cloned an empty repository.


Ankur@ANKUR-DESKTOP MINGW64 /d/Development
$ cd git_command/


Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (main)
$ git  status
On branch main

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        commands.txt

nothing added to commit but untracked files present (use "git add" to track)


Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (main)
$ git add commands.txt

Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (main)
$ git  status
On branch main

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   commands.txt


Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (main)
$ git commit -m "adding file"
[main (root-commit) c4c3a89] adding file
 1 file changed, 22 insertions(+)
 create mode 100644 commands.txt

Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (main)
$ git push
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Delta compression using up to 24 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 519 bytes | 519.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/ankurbhargava0511/git_command.git
 * [new branch]      main -> main


Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   commands.txt

no changes added to commit (use "git add" and/or "git commit -a")

Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (main)
$ git add .

Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (main)
$ git commit -m "upodated file"
[main 2d44657] upodated file
 1 file changed, 36 insertions(+), 1 deletion(-)

Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (main)
$ git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 24 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 822 bytes | 822.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/ankurbhargava0511/git_command.git
   c4c3a89..2d44657  main -> main


Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   commands.txt

no changes added to commit (use "git add" and/or "git commit -a")

Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (main)
$ git commit -m "test commit"
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   commands.txt

no changes added to commit (use "git add" and/or "git commit -a")

Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (main)
$ git add .

Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (main)
$ git commit -m "test changes"
[main 667c510] test changes
 1 file changed, 32 insertions(+), 1 deletion(-)

Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (main)
$ git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 24 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 617 bytes | 617.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/ankurbhargava0511/git_command.git
   2d44657..667c510  main -> main


Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (main)
$ git pull
Already up to date.

Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (main)
$ git add .

Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (main)
$ git commit -m "final"
[main 1d9b0f9] final
 1 file changed, 5 insertions(+)

Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (main)
$ git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 24 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 300 bytes | 300.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/ankurbhargava0511/git_command.git
   49bacd8..1d9b0f9  main -> main



Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (main)
$ git branch
* main

Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (main)
$ git branch feature

Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (main)
$ git branch
  feature
* main

Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (main)
$ git checkout feature
Switched to branch 'feature'

Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (feature)
$ git status
On branch feature
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   commands.txt

no changes added to commit (use "git add" and/or "git commit -a")

Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (feature)
$ git add .

Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (feature)
$ git commit -m "test from branch"
[feature 37adfef] test from branch
 1 file changed, 21 insertions(+)

Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (feature)
$ git push
fatal: The current branch feature has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin feature

To have this happen automatically for branches without a tracking
upstream, see 'push.autoSetupRemote' in 'git help config'.


Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (feature)
$ git status
On branch feature
nothing to commit, working tree clean

Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (feature)
$ git push
fatal: The current branch feature has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin feature

To have this happen automatically for branches without a tracking
upstream, see 'push.autoSetupRemote' in 'git help config'.



Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (feature)
$ git push --set--upstream origin feature
error: unknown option `set--upstream'
usage: git push [<options>] [<repository> [<refspec>...]]

    -v, --verbose         be more verbose
    -q, --quiet           be more quiet
    --repo <repository>   repository
    --all                 push all branches
    --branches            alias of --all
    --mirror              mirror all refs
    -d, --delete          delete refs
    --tags                push tags (can't be used with --all or --branches or --mirror)
    -n, --dry-run         dry run
    --porcelain           machine-readable output
    -f, --force           force updates
    --force-with-lease[=<refname>:<expect>]
                          require old value of ref to be at this value
    --force-if-includes   require remote updates to be integrated locally
    --recurse-submodules (check|on-demand|no)
                          control recursive pushing of submodules
    --thin                use thin pack
    --receive-pack <receive-pack>
                          receive pack program
    --exec <receive-pack> receive pack program
    -u, --set-upstream    set upstream for git pull/status
    --progress            force progress reporting
    --prune               prune locally removed refs
    --no-verify           bypass pre-push hook
    --follow-tags         push missing but relevant tags
    --signed[=(yes|no|if-asked)]
                          GPG sign the push
    --atomic              request atomic transaction on remote side
    -o, --push-option <server-specific>
                          option to transmit
    -4, --ipv4            use IPv4 addresses only
    -6, --ipv6            use IPv6 addresses only


Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (feature)
$ git push --set-upstream origin feature
Enumerating objects: 8, done.
Counting objects: 100% (8/8), done.
Delta compression using up to 24 threads
Compressing objects: 100% (4/4), done.
Writing objects: 100% (6/6), 882 bytes | 882.00 KiB/s, done.
Total 6 (delta 2), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (2/2), completed with 1 local object.
remote:
remote: Create a pull request for 'feature' on GitHub by visiting:
remote:      https://github.com/ankurbhargava0511/git_command/pull/new/feature
remote:
To https://github.com/ankurbhargava0511/git_command.git
 * [new branch]      feature -> feature
branch 'feature' set up to track 'origin/feature'.

Ankur@ANKUR-DESKTOP MINGW64 /d/Development/git_command (feature)
